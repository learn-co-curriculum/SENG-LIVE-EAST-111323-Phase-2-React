{"ast":null,"code":"var _jsxFileName = \"/Users/greem/Dev/22-Flatiron-teach/greem-practice/lecture-041023-111323/Phase-2-SOLO-111323-Phase-2-React/01_components_and_props/project_showcase/src/components/ProjectList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectList(_ref) {\n  let {\n    projects\n  } = _ref;\n  // console.log(props) //{}\n  // console.log(props.projects) //[] \n  //                             //access the value of the props by dot notation\n  // console.log(props.num)\n  // // let projects = props.projects //object destructuring\n  // // console.log(\"======\", projects) //[] value\n  // let { projects } = props //object destructuring\n  console.log(\"#######\", projects); //[] value\n  //.map vs .forEach\n\n  let projectMap = projects.map(eachP => eachP.name); //one line .map method, doesn't require a return keyword\n\n  console.log(projectMap);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ProjectList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/Users/greem/Dev/22-Flatiron-teach/greem-practice/lecture-041023-111323/Phase-2-SOLO-111323-Phase-2-React/01_components_and_props/project_showcase/src/components/ProjectList.jsx"],"names":["ProjectList","projects","console","log","projectMap","map","eachP","name"],"mappings":";;AAAA,eAAe,SAASA,WAAT,OAAiC;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAE5C;AACA;AACA;AACA;AAEA;AACA;AAEA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB,EAX4C,CAWV;AAElC;;AAEA,MAAIG,UAAU,GAAGH,QAAQ,CAACI,GAAT,CAAcC,KAAD,IAAWA,KAAK,CAACC,IAA9B,CAAjB,CAf4C,CAeS;;AACrDL,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAOD,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGF;KA1BuBJ,W","sourcesContent":["export default function ProjectList({projects}) {\n\n    // console.log(props) //{}\n    // console.log(props.projects) //[] \n    //                             //access the value of the props by dot notation\n    // console.log(props.num)\n\n    // // let projects = props.projects //object destructuring\n    // // console.log(\"======\", projects) //[] value\n\n    // let { projects } = props //object destructuring\n    console.log(\"#######\", projects)  //[] value\n\n    //.map vs .forEach\n\n    let projectMap = projects.map((eachP) => eachP.name) //one line .map method, doesn't require a return keyword\n    console.log(projectMap)\n\n    \n\n\n\n\n   return (\n    <div>ProjectList</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}